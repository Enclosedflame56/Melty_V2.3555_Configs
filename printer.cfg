[include mmu/base/*.cfg]
[include mmu/optional/client_macros.cfg]
[include mmu/addons/blobifier.cfg]
[include ercf_menu.cfg]
# This file contains pin mappings for the LDO Kit using BigTreeTech Octopus V1 as the main controller.
# To use this config, the firmware should be compiled for the STM32F446 with a "32KiB bootloader"
# Enable "extra low-level configuration options" and select the "12MHz crystal" as clock reference

# after running "make", copy the generated "klipper/out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the Octopus with that SD card.

# See docs/Config_Reference.md for a description of parameters.

## Voron Design VORON2 250/300/350mm BigTreeTech Octopus V1 TMC2209 UART config

## *** THINGS TO CHANGE/CHECK: ***
## MCU paths                            [mcu] section
## Thermistor types                     [extruder] and [heater_bed] sections - See 'sensor types' list at end of file
## Z Endstop Switch location            [safe_z_home] section
## Homing end position                  [gcode_macro G32] section
## Z Endstop Switch  offset for Z0      [stepper_z] section
## Probe points                         [quad_gantry_level] section
## Min & Max gantry corner postions     [quad_gantry_level] section
## PID tune                             [extruder] and [heater_bed] sections
## Thermistor types                     [extruder] and [heater_bed] sections
## Probe pin                            [probe] section
## Fine tune E steps                    [extruder] section


[exclude_object]

# [mcu rpi]
# serial: /tmp/klipper_host_mcu

# Enable arcs support
[gcode_arcs]
resolution: 0.1

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_0D0013001850344D30353320-if00

[mcu EBBCan]
canbus_uuid: 7376ef52fcf1


##restart_method: command
##--------------------------------------------------------------------

[input_shaper]
shaper_freq_x: 58.6
shaper_type_x: zv
shaper_freq_y: 59.2
shaper_type_y: ei

[printer]
max_accel: 6000  # should not exceed the estimated max_accel for X and Y axes

[printer]
kinematics: corexy
max_velocity: 500  
max_z_velocity: 15          #Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 5.0

##Include these Configuration files:
[include mainsail.cfg]
[include stealthburner_leds.cfg]
[include klicky-probe.cfg]
[include autoz.cfg]
[include nozzle_scrub.cfg]
[include custom_menu.cfg]
[include homing.cfg]
[include config_backup.cfg]
#[include input_shaper.cfg]

[pause_resume]

[display_status]

[virtual_sdcard]
path: ~/printer_data/gcodes

#####################################################################
#       ERCF Configuration Files
#####################################################################

#[include ercf_hardware.cfg]
#[include ercf_software.cfg]
#[include ercf_parameters.cfg]
#[include client_macros.cfg] 


#####################################################################
#       KAMP Configuration Files
#####################################################################
[include KAMP_Settings.cfg]
[include ./KAMP/Adaptive_Meshing.cfg]
[include ./KAMP/Smart_Park.cfg]

#####################################################################
#   X/Y Stepper Settings
#####################################################################

[force_move]
enable_force_move: True

##  B Stepper - Left
##  Connected to MOTOR0
##  Endstop connected to DIAG0
[stepper_x]
step_pin: PF13
dir_pin: PF12
enable_pin: !PF14
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:400  #set to 400 for 0.9 degree stepper
endstop_pin: tmc2209_stepper_x:virtual_endstop #PG6
position_min: 0
##--------------------------------------------------------------------

##  Uncomment for 300mm build
position_endstop: 300
position_max: 300

##--------------------------------------------------------------------
homing_speed: 40   #Max 100
homing_retract_dist: 0
homing_positive_dir: true

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_x]
uart_pin: PC4
## Sensorless Homing
diag_pin: ^PG6
driver_SGTHRS: 142
interpolate: false
run_current: 1.0
sense_resistor: 0.110
stealthchop_threshold: 0

##  A Stepper - Right
##  Connected to MOTOR1
##  Endstop connected to DIAG1
[stepper_y]
step_pin: PG0
dir_pin: PG1
enable_pin: !PF15
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:400  #set to 400 for 0.9 degree stepper
endstop_pin: tmc2209_stepper_y:virtual_endstop #PG9
position_min: 0
##--------------------------------------------------------------------

##  Uncomment for 300mm build
position_endstop: 309
position_max: 309

##--------------------------------------------------------------------
homing_speed: 40  #Max 100
homing_retract_dist: 0
homing_positive_dir: true

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_y]
uart_pin: PD11
## Sensorless Homing
diag_pin: ^PG9
driver_SGTHRS: 143

interpolate: false
run_current: 1.0
sense_resistor: 0.110
stealthchop_threshold: 0
 
#####################################################################
#   Z Stepper Settings
#####################################################################

## Z0 Stepper - Front Left
##  Connected to MOTOR2_1
##  Endstop connected to DIAG_2
[stepper_z]
step_pin: PF11
dir_pin: PG3
enable_pin: !PG5
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32
endstop_pin: PG15
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##  Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
#position_endstop: -0.5
##--------------------------------------------------------------------

##  Uncomment below for 300mm build
position_max: 260

##--------------------------------------------------------------------
position_min: -5
homing_speed: 15
second_homing_speed: 5
homing_retract_dist: 3

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z]
uart_pin: PC6
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 999999

##  Z1 Stepper - Rear Left
##  Connected to MOTOR3
[stepper_z1]
step_pin: PG4
dir_pin: !PC1
enable_pin: !PA0
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z1]
uart_pin: PC7
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 999999

##  Z2 Stepper - Rear Right
##  Connected to MOTOR4
[stepper_z2]
step_pin: PF9
dir_pin: PF10
enable_pin: !PG2
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z2]
uart_pin: PF2
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 999999

##  Z3 Stepper - Front Right
##  Connected to MOTOR5
[stepper_z3]
step_pin: PC13
dir_pin: !PF0
enable_pin: !PF1
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z3]
uart_pin: PE4
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 999999


#####################################################################
#   Extruder
#####################################################################

##  Connected to MOTOR_6
##  Heater - HE0
##  Thermistor - T0
[extruder]
max_extrude_only_distance: 300
max_extrude_cross_section: 50.0
step_pin: EBBCan: PD0 #PE2
dir_pin: !EBBCan: PD1 #!PE3
enable_pin: !EBBCan: PD2 #!PD4
##  Update value below when you perform extruder calibration
##  If you ask for 100mm of filament, but in reality it is 98mm:
##  rotation_distance = <previous_rotation_distance> * <actual_extrude_distance> / 100
##  22.6789511 is a good starting point
rotation_distance: 22.379774 #22.6789511   #Bondtech 5mm Drive Gears
##  Update Gear Ratio depending on your Extruder Type
##  Use 50:17 for Afterburner/Clockwork (BMG Gear Ratio)
##  Use 80:20 for M4, M3.1
gear_ratio: 50:10               #BMG Gear Ratio with Clockwork 2
microsteps: 32
full_steps_per_rotation: 200    #200 for 1.8 degree, 400 for 0.9 degree
nozzle_diameter: 0.400
filament_diameter: 1.75
heater_pin: EBBCan: PB13 #PA3
##  Validate the following thermistor type to make sure it is correct
##  See https://www.klipper3d.org/Config_Reference.html#common-thermistors for additional options
sensor_type: ATC Semitec 104GT-2
sensor_pin: EBBCan: PA3 #PF4
min_temp: 0
max_temp: 270
max_power: 1.0
min_extrude_temp: 170
#control = pid
#pid_kp = 26.213
#pid_ki = 1.304
#pid_kd = 131.721
##  Try to keep pressure_advance below 1.0
pressure_advance: 0.05
##  Default is 0.040, leave stock
#pressure_advance_smooth_time: 0.040

##  E0 on MOTOR6
##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 extruder]
uart_pin: EBBCan: PA15 #PE1
interpolate: false
run_current: 0.6
hold_current: 0.3
sense_resistor: 0.110
stealthchop_threshold: 999999 #0


#####################################################################
#   Bed Heater
#####################################################################

[heater_bed]
##  SSR Pin - HE1
##  Thermistor - TB
heater_pin: PA1
##  Validate the following thermistor type to make sure it is correct
##  See https://www.klipper3d.org/Config_Reference.html#common-thermistors for additional options
sensor_type: Generic 3950
sensor_pin: PF3
##  Adjust Max Power so your heater doesn't warp your bed. Rule of thumb is 0.4 watts / cm^2 .
max_power: 0.6
min_temp: 0
max_temp: 120
#control: pid
#pid_kp: 58.437
#pid_ki: 2.347
#pid_kd: 363.769

#####################################################################
#   Enclosure Temperature
#####################################################################

[thermistor Trianglelab-NTC100K-B3950]
temperature1: 25
resistance1: 103180
temperature2: 150
resistance2: 1366.2
temperature3: 250
resistance3: 168.6

[temperature_sensor chamber_temp]
## Chamber Temperature - T1
sensor_type: Trianglelab-NTC100K-B3950
sensor_pin: PF5
min_temp: 0
max_temp: 100
gcode_id: chamber_th

[temperature_sensor SB2209]
sensor_type: Generic 3950
sensor_pin: EBBCan: PA2

#####################################################################
#   Probe
#####################################################################

[probe]
##  Inductive Probe - DIAG7
##  This probe is not used for Z height, only Quad Gantry Leveling
pin: ^EBBCan: PB6 #PG15
x_offset: 0
y_offset: 25.0
#z_offset: 0
speed: 5.0
samples: 3
samples_result: median
sample_retract_dist: 1.5
samples_tolerance: 0.006
samples_tolerance_retries: 10

#####################################################################
#   Fan Control
#####################################################################

[fan]
##  Print Cooling Fan - CNC_FAN0
pin: EBBCan: PA1 #PA8
kick_start_time: 0.5
##  Depending on your fan, you may need to increase this value
##  if your fan will not start. Can change cycle_time (increase)
##  if your fan is not able to slow down effectively
off_below: 0.10

[heater_fan hotend_fan]
##  Hotend Fan - CNC_FAN1
pin: EBBCan: PA0 #PE5
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
##  If you are experiencing back flow, you can reduce fan_speed
#fan_speed: 1.0

[controller_fan Electronic_fans]
##  Controller fan - CNC_FAN2 (Electronics Bay)
pin: PD12
kick_start_time: 0.5
heater: heater_bed
fan_speed: 0.5

[heater_fan Nevermore_fans]
##  Nevermore fans - CNC_FAN3
pin: PD13
max_power: 1.0
shutdown_speed: 0.0
kick_start_time: 5.0
heater: heater_bed
heater_temp: 60
fan_speed: 1.0

#####################################################################
#   LED Control
#####################################################################

[output_pin caselight]
## Chamber Lighting - CNC_FAN5
pin: PD15
pwm:true
shutdown_value: 0
value:1
cycle_time: 0.01

#####################################################################
#   Additional Sensors
#####################################################################

[thermistor CMFB103F3950FANT]
temperature1: 0.0
resistance1: 32116.0
temperature2: 40.0
resistance2: 5309.0
temperature3: 80.0
resistance3: 1228.0


# [filament_switch_sensor RunoutSensor]
# pause_on_runout: True
# runout_gcode: PAUSE
# insert_gcode: RESUME
# switch_pin: ^EBBCan: PC13 #PB5

#extruder_switch_pin: EBBCan: PB5
#toolhead_switch_pin: EBBCan: PC13

#####################################################################
# 	Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 36000

[quad_gantry_level]
##  Use QUAD_GANTRY_LEVEL to level a gantry.
##  Min & Max gantry corners - measure from nozzle at MIN (0,0) and 
##  MAX (250, 250), (300,300), or (350,350) depending on your printer size
##  to respective belt positions

gantry_corners:
   -60,-10
   360,370
##  Probe points
points:
   50,25
   50,225
   250,225
   250,25

#--------------------------------------------------------------------
speed: 600
horizontal_move_z: 12
retries: 8
retry_tolerance: 0.0075
max_adjust: 10

########################################
# EXP1 / EXP2 (display) pins
########################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE8, EXP1_2=PE7,
    EXP1_3=PE9, EXP1_4=PE10,
    EXP1_5=PE12, EXP1_6=PE13,    # Slot in the socket on this side
    EXP1_7=PE14, EXP1_8=PE15,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PA6, EXP2_2=PA5,
    EXP2_3=PB1, EXP2_4=PA4,
    EXP2_5=PB2, EXP2_6=PA7,      # Slot in the socket on this side
    EXP2_7=PC15, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<5V>

#####################################################################
#   Displays
#####################################################################

[display]
#  mini12864 LCD Display
lcd_type: uc1701
cs_pin: EXP1_3
a0_pin: EXP1_4
rst_pin: EXP1_5
encoder_pins: ^EXP2_5, ^EXP2_3
click_pin: ^!EXP1_2
contrast: 63
spi_software_miso_pin: EXP2_1
spi_software_mosi_pin: EXP2_6
spi_software_sclk_pin: EXP2_2

[neopixel btt_mini12864]
#  To control Neopixel RGB in mini12864 display
pin: EXP1_6
chain_count: 3
initial_RED: 0.6
initial_GREEN: 0.6
initial_BLUE: 0.6
color_order: RGB

##  Set RGB values on boot up for each Neopixel. 
##  Index 3 = display, Index 1 and 2 = Knob
[delayed_gcode setdisplayneopixel]
initial_duration: 1
gcode:
        SET_LED LED=btt_mini12864 RED=0 GREEN=0 BLUE=1 INDEX=1 TRANSMIT=0
        SET_LED LED=btt_mini12864 RED=0 GREEN=1 BLUE=0 INDEX=2 TRANSMIT=0
        SET_LED LED=btt_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=3 


#--------------------------------------------------------------------


#####################################################################
#   Macros
#####################################################################

[gcode_macro PURGE_LINE]
gcode:    
    M117 Prime Line
    G92 E0
    G90            
    G0 X90 Y8 F6000           ; Go to X3 Y3
    G1 Z0.2 F600              ; Set Nozzle Height
    G91                       
    G1 X120 E30 F1200         ;Intro Line
    G1 Y1                     ; Move Y 1
    G1 X-120 E15 F1200        ;Intro Line
    G1 Y3                     ;Go to Next Line
    G0 E-1.0                    ; Retract Filament
    G1 X60 F8000              ; Go back to middle and purge Nozzle
    G92 E0.0                  ; Reset Extruder
    G1 Z1 F5000               ; Lift Z
    G90                       ;Absolute Programming

[gcode_macro G32]
gcode:
  {% if "xyz" not in printer.toolhead.homed_axes %}
        G28
    {% endif %}
    QUAD_GANTRY_LEVEL
        G0  Z10 F3600
    #--------------------------------------------------------------------
   
[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:

##############Check for Superslicer Tools!######################################################
    {% set REFERENCED_TOOLS = params.REFERENCED_TOOLS|default("")|string %}
    {% set INITIAL_TOOL = params.INITIAL_TOOL|default(0)|int %}

    {% if REFERENCED_TOOLS == "!referenced_tools!" %}
        RESPOND MSG="Happy Hare gcode pre-processor is diabled"
        {% set REFERENCED_TOOLS = INITIAL_TOOL %}
    {% elif REFERENCED_TOOLS == "" %}
        RESPOND MSG="Happy Hare single color print"
        {% set REFERENCED_TOOLS = INITIAL_TOOL %}
    {% endif %}
    MMU_CHECK_GATE TOOLS={REFERENCED_TOOLS}
    #MMU_CHANGE_TOOL STANDALONE=1 TOOL={INITIAL_TOOL}    # Optional: load initial tool

##############Check for Superslicer Colors!######################################################
    {% set COLORS = params.COLORS|default("")|string %}
    {% set colors = COLORS.split(",") %}
    {% set ttg_map = printer.mmu.ttg_map %}

    {% for color in colors %}
        {% set tool = loop.index0 %}
        {% set gate = ttg_map[tool] %}                  # Make sure map to correct gate in case of TTG map
        MMU_GATE_MAP GATE={gate} COLOR={color}          # Register the filament color against correct gate in gate map
    {% endfor %}
#################################################################################################


    STATUS_READY
    # Parameters
    {% set bedtemp = params.BED|int %}
    {% set hotendtemp = params.HOTEND|int %}

    CLEAR_PAUSE

    M140 S{bedtemp}
    BED_MESH_CLEAR
    STATUS_HOMING
    M117 HOMING
    G28                            ;Home all axis    

    STATUS_LEVELING
    # Wait for bed to reach temperature
    M117 BED HEATING
    M190 S{bedtemp}

   

    # Set and wait for nozzle to reach temperature
    STATUS_HEATING
    M117 NOZZLE HEAT
    M104 S{hotendtemp}
    ATTACH_PROBE_LOCK
    M117 QGL
    G32                             ; Quad Gantry Level

    G0 X100 Y150 F10000            ; Move Endswitch away from knocking off the dock.

    Clean_nozzle             ; Clean Nozzle and Scrub
   

    STATUS_CALIBRATING_Z
    M117 Calibrating Z
    CALIBRATE_Z
    
    STATUS_MESHING
   
    M117 BED MESHING
    BED_MESH_CALIBRATE ADAPTIVE=1             ; Measure Bed Offset
    Dock_Probe_Unlock
    M117                           ; Clear LCD Message
    G92 E0
    G1 E3 F400 #Push 3mm just to get filament right at the nozzle.
    STATUS_PRINTING
    #SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=1

[gcode_macro LOAD_FILAMENT]
#DESCRIPTION: Loads the filament.
variable_load_distance:  150
variable_purge_distance:  25
gcode:
    {% set speed = params.SPEED|default(300) %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(255)|float %} #Heat hotend to 255°C to load.
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity  * 30 %}
    SAVE_GCODE_STATE NAME=load_state
    M117 Heating...
    RESPOND MSG="Heating..."
    M109 S{EXTRUDER_TEMP}
    G91
    M117 Loading Filament
    G92 E0
    G1 E{load_distance} F{max_velocity} # fast-load
    G1 E{purge_distance} F{speed} # purge
    G1 E-3 F300 #Retract 3mm just to keep it from oozing.
    G91 #RESET
    M117 Filament Loaded!
    RESPOND MSG="Filament Loaded!"
    RESTORE_GCODE_STATE NAME=load_state


[gcode_macro UNLOAD_FILAMENT]
#DESCRIPTION: Unloads the filament.
variable_unload_distance:  300
variable_purge_distance:  5
gcode:
    {% set speed = params.SPEED|default(300) %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(255)|float %} #Heat hotend to 255°C to load.
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity  * 20 %}
    SAVE_GCODE_STATE NAME=unload_state
    G91
    M117 Heating...
    RESPOND MSG="Heating..."
    M109 S{EXTRUDER_TEMP}
    M117 Unloading Filament
    G92 E0
    G1 E{purge_distance} F{speed} # purge
    G1 E-{unload_distance} F{max_velocity} # fast-unload
    G91 #RESET
    M117 Filament Unloaded!
    RESPOND MSG="Filament Unloaded!"
    RESTORE_GCODE_STATE NAME=unload_state
   

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    

    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 5, th.axis_maximum.z]|min %}
    {% set unload = params.UNLOAD_AT_END|default(0)|int %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    M400                                     ; wait for buffer to clear
    G92 E0                                   ; zero the extruder
    G1 E-5.0 F1800                           ; retract filament
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
     
    G91
    G1 Z2 F3000
    G90                                      ;Absolute Positioning
    G0 X{th.axis_maximum.x//2 - 70} Y{th.axis_maximum.y - 10} F3600  ; park nozzle at rear
    # {% if unload|int == 1%}
    #  ERCF_EJECT
    # {% endif %}

    TURN_OFF_HEATERS                         ;Turn off Extruder and Bed Heat 
    M107                                     ; turn off fan

    STATUS_READY                            ;SB LED Command

    BED_MESH_CLEAR
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END

# Home, get position, throw around toolhead, home again.
# If MCU stepper positions (first line in GET_POSITION) are greater than a full step different (your number of microsteps), then skipping occured.
# We only measure to a full step to accomodate for endstop variance.
# Example: TEST_SPEED SPEED=300 ACCEL=5000 ITERATIONS=10

######################################################################
# Filament Change
######################################################################

# M600: Filament Change. This macro will pause the printer, move the
# tool to the change position, and retract the filament 50mm. Adjust
# the retraction settings for your own extruder. After filament has
# been changed, the print can be resumed from its previous position
# with the "RESUME" gcode.

[pause_resume]

[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(5)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    M117 FEED ME MY NEXT COLOR
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state

[gcode_macro TEST_SPEED]
gcode:
	# Speed
	{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
	# Iterations
	{% set iterations = params.ITERATIONS|default(5)|int %}
	# Acceleration
	{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
	# Bounding inset for large pattern (helps prevent slamming the toolhead into the sides after small skips, and helps to account for machines with imperfectly set dimensions)
	{% set bound = params.BOUND|default(20)|int %}
	# Size for small pattern box
	{% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
	
	# Large pattern
		# Max positions, inset by BOUND
		{% set x_min = printer.toolhead.axis_minimum.x + bound %}
		{% set x_max = printer.toolhead.axis_maximum.x - bound %}
		{% set y_min = printer.toolhead.axis_minimum.y + bound %}
		{% set y_max = printer.toolhead.axis_maximum.y - bound %}
	
	# Small pattern at center
		# Find X/Y center point
		{% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
		{% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
		
		# Set small pattern box around center point
		{% set x_center_min = x_center - (smallpatternsize/2) %}
		{% set x_center_max = x_center + (smallpatternsize/2) %}
		{% set y_center_min = y_center - (smallpatternsize/2) %}
		{% set y_center_max = y_center + (smallpatternsize/2) %}

	# Save current gcode state (absolute/relative, etc)
	SAVE_GCODE_STATE NAME=TEST_SPEED
	
	# Output parameters to g-code terminal
	{ action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
	
	# Set new limits
	SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}

	# Home and get position for comparison later:
		G28
		# QGL if not already QGLd (only if QGL section exists in config)
		{% if printer.configfile.settings.quad_gantry_level %}
			{% if printer.quad_gantry_level.applied == False %}
				QUAD_GANTRY_LEVEL
				G28 Z
			{% endif %}
		{% endif %}	
		G90
		G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
		G4 P1000 
		GET_POSITION

	# Go to starting position
	G0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}

	{% for i in range(iterations) %}
		# Large pattern
			# Diagonals
			G0 X{x_min} Y{y_min} F{speed*60}
			G0 X{x_max} Y{y_max} F{speed*60}
			G0 X{x_min} Y{y_min} F{speed*60}
			G0 X{x_max} Y{y_min} F{speed*60}
			G0 X{x_min} Y{y_max} F{speed*60}
			G0 X{x_max} Y{y_min} F{speed*60}
			
			# Box
			G0 X{x_min} Y{y_min} F{speed*60}
			G0 X{x_min} Y{y_max} F{speed*60}
			G0 X{x_max} Y{y_max} F{speed*60}
			G0 X{x_max} Y{y_min} F{speed*60}
		
		# Small pattern
			# Small diagonals 
			G0 X{x_center_min} Y{y_center_min} F{speed*60}
			G0 X{x_center_max} Y{y_center_max} F{speed*60}
			G0 X{x_center_min} Y{y_center_min} F{speed*60}
			G0 X{x_center_max} Y{y_center_min} F{speed*60}
			G0 X{x_center_min} Y{y_center_max} F{speed*60}
			G0 X{x_center_max} Y{y_center_min} F{speed*60}
			
			# Small box
			G0 X{x_center_min} Y{y_center_min} F{speed*60}
			G0 X{x_center_min} Y{y_center_max} F{speed*60}
			G0 X{x_center_max} Y{y_center_max} F{speed*60}
			G0 X{x_center_max} Y{y_center_min} F{speed*60}
	{% endfor %}

	# Restore max speed/accel/accel_to_decel to their configured values
	SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel} 

	# Re-home and get position again for comparison:
		G28
		# Go to XY home positions (in case your homing override leaves it elsewhere)
		G90
		G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
		G4 P1000 
		GET_POSITION

	# Restore previous gcode state (absolute/relative, etc)
	RESTORE_GCODE_STATE NAME=TEST_SPEED


######################### CUSTOM MACROS###################################################
[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
    # Parameters
    {% set z = params.Z|default(10)|int %}                                                   ; z hop amount
    
    {% if printer['pause_resume'].is_paused|int == 0 %}     
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}                              ; set z hop variable for reference in resume macro
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}    ; set hotend temp variable for reference in resume macro
                                
       ; SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0                                  ; disable filament sensor       
        SAVE_GCODE_STATE NAME=PAUSE                                                          ; save current print position for resume                
        BASE_PAUSE                                                                           ; pause print
        {% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}       ; check that zhop doesn't exceed z max
            G91                                                                              ; relative positioning
            G1 Z{z} F900                                                                     ; raise Z up by z hop amount
        {% else %}
            { action_respond_info("Pause zhop exceeds maximum Z height.") }                  ; if z max is exceeded, show message and set zhop value for resume to 0
            SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
        {% endif %}
        G90                                                                                  ; absolute positioning
        G1 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+10} F6000   ; park toolhead at front center
        SAVE_GCODE_STATE NAME=PAUSEPARK                                                      ; save parked position in case toolhead is moved during the pause (otherwise the return zhop can error) 
        #M104 S0                                                                              ; turn off hotend
        SET_IDLE_TIMEOUT TIMEOUT=43200                                                       ; set timeout to 12 hours
    {% endif %}

[gcode_macro RESUME]
rename_existing: BASE_RESUME
variable_zhop: 0
variable_etemp: 0
gcode:
    # Parameters
    {% set e = params.E|default(2.5)|int %}                                          ; hotend prime amount (in mm)
    
    {% if printer['pause_resume'].is_paused|int == 1 %}
        ;SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0                          ; enable filament sensor
        #RESETRGB                                                                    ; reset LCD color
        SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}  ; set timeout back to configured value
        {% if etemp > 0 %}
            M109 S{etemp|int}                                                        ; wait for hotend to heat back up
        {% endif %}
        RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=100                     ; go back to parked position in case toolhead was moved during pause (otherwise the return zhop can error)  
        G91                                                                          ; relative positioning
        M83                                                                          ; relative extruder positioning
        {% if printer[printer.toolhead.extruder].temperature >= printer.configfile.settings.extruder.min_extrude_temp %}                                                
            G1 Z{zhop * -1} E{1.0} F900                                                ; prime nozzle by E, lower Z back down
        {% else %}                      
            G1 Z{zhop * -1} F900                                                     ; lower Z back down without priming (just in case we are testing the macro with cold hotend)
        {% endif %}                             
        RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=60                          ; restore position
        BASE_RESUME                                                                  ; resume print
    {% endif %}

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout} ; set timeout back to configured value
    CLEAR_PAUSE
    #SDCARD_RESET_FILE
    PRINT_END
    BASE_CANCEL_PRINT

# Park front center
[gcode_macro PARKFRONT]
gcode:
    CG28                             ; home if not already homed
    SAVE_GCODE_STATE NAME=PARKFRONT
    G90                               ; absolute positioning
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} Z{printer.toolhead.axis_maximum.z/4} F24000        
    RESTORE_GCODE_STATE NAME=PARKFRONT

# Park front center, but low down.
[gcode_macro PARKFRONTLOW]
gcode:
    CG28                            ; home if not already homed
    SAVE_GCODE_STATE NAME=PARKFRONT
    G90                              ; absolute positioning
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+25} Z20 F20000                                     
    RESTORE_GCODE_STATE NAME=PARKFRONT

# Park top rear left
[gcode_macro PARKREAR]
gcode:
    #CG28                            ; home if not already homed
    SAVE_GCODE_STATE NAME=PARKREAR
    G90                              ; absolute positioning
    G0 X{printer.toolhead.axis_minimum.x+10} Y{printer.toolhead.axis_maximum.y-10} Z{printer.toolhead.axis_maximum.z-200} F20000     
    RESTORE_GCODE_STATE NAME=PARKREAR

# Park at center of build volume
[gcode_macro PARKCENTER]
gcode:
    #CG28                             ; home if not already homed
    SAVE_GCODE_STATE NAME=PARKCENTER
    G90                               ; absolute positioning
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y/2} Z{printer.toolhead.axis_maximum.z/4} F24000    
    RESTORE_GCODE_STATE NAME=PARKCENTER

# Park 15mm above center of bed
[gcode_macro PARKBED]
gcode:
    #CG28                              ; home if not already homed
    SAVE_GCODE_STATE NAME=PARKBED
    G90                                ; absolute positioning
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y/4} Z15 F24000                                     
    RESTORE_GCODE_STATE NAME=PARKBED


[gcode_macro OFF]
gcode:
    M84                                  ; turn steppers off
    TURN_OFF_HEATERS                     ; turn bed / hotend off
    M107                                 ; turn print cooling fan off
    SET_FAN_SPEED FAN=Exhaust SPEED=0   ; turn exhaust fan off
    SET_FAN_SPEED FAN=BedFans SPEED=0   ; bed fan off
    SET_PIN PIN=caselight VALUE=0       ; turn case light off

[gcode_macro SHUTDOWN]
gcode:
    #LCDRGB R=0 G=0 B=0                               ; Turn off LCD neopixels (see above for this macro)
    #OFF                                              ; Shortcut to turn everything off (see above for this macro)
    {action_respond_info('action:poweroff')}          ; OctoPrint compatible host shutdown
	{action_call_remote_method("shutdown_machine")}   ; Moonraker compatible host shutdown

[menu __main __setup __shutdown]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: Shut down
gcode: SHUTDOWN

[gcode_macro WARMUP]
gcode:
  {% set bed_temp = params.TEMPERATURE|default(105)|float %}
  M140 S{bed_temp}
  SET_HEATER_TEMPERATURE HEATER=extruder TARGET=245


#########################################################################
############## RASPBERRY PI STUFF #######################################
#########################################################################

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100



#########################################################################
################### BED MESHING #########################################
#########################################################################

[bed_mesh]
speed: 300
horizontal_move_z: 10.0
##--------------------------------------------------------------------

##	Uncomment for 300mm build
mesh_min: 40, 40
mesh_max: 260,260
#mesh_max: 310,308
##--------------------------------------------------------------------
fade_start: 0.6
fade_end: 10.0
probe_count: 5,5
algorithm: bicubic
zero_reference_position: 150, 150

#########################################################################
###################### SPOOLMAN #########################################
#########################################################################

[gcode_macro SET_ACTIVE_SPOOL]
gcode:
  {% if params.ID %}
    {% set id = params.ID|int %}
    {action_call_remote_method(
       "spoolman_set_active_spool",
       spool_id=id
    )}
  {% else %}
    {action_respond_info("Parameter 'ID' is required")}
  {% endif %}

[gcode_macro CLEAR_ACTIVE_SPOOL]
gcode:
  {action_call_remote_method(
    "spoolman_set_active_spool",
    spool_id=None
  )}


#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 41.011
#*# pid_ki = 1.367
#*# pid_kd = 307.579
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 21.912
#*# pid_ki = 1.873
#*# pid_kd = 64.093
#*#
#*# [stepper_z]
#*# position_endstop = 2.049
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	0.063750, 0.062500, 0.066250, 0.091250, 0.095000
#*# 	0.001250, 0.012500, 0.023750, 0.031250, 0.013750
#*# 	-0.025000, -0.010000, 0.000000, 0.003750, 0.016250
#*# 	-0.006250, 0.021250, 0.007500, 0.038750, 0.047500
#*# 	0.082500, 0.072500, 0.071250, 0.056250, 0.062500
#*# tension = 0.2
#*# min_x = 40.0
#*# algo = lagrange
#*# y_count = 5
#*# mesh_y_pps = 2
#*# min_y = 40.0
#*# x_count = 5
#*# max_y = 260.0
#*# mesh_x_pps = 2
#*# max_x = 260.0
#*#
#*# [probe]
#*# z_offset = -0.021
